import React, { useState, useEffect } from "react";
import { useParams } from "react-router-dom";
import ArrowBackIosIcon from "@mui/icons-material/ArrowBackIos";
import { Link, useNavigate } from "react-router-dom";
import TranslationItem from "../components/TranslationItem";

const TranslationListPage = () => {
  let params = useParams();
  let history = useNavigate();
  let bookId = params.id;
  let [dict, setDict] = useState([]); // default value is null

  // adding dependencies prevents infinite loop
  useEffect(() => {
    let getDict = async () => {
      let response = await fetch(`/main/library/${bookId}/translations/`); // backticks allow dynamic parameters
      let data = await response.json();
      console.log(data);
      setDict(data);
    };
    getDict();
  }, [bookId]);

  let updateTranslation = async () => {
    fetch(`/main/library/${bookId}/translations`, {
      method: "PUT",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify(dict),
    });
  };

  let handleSubmit = () => {
    updateTranslation();
    history("/"); // sends user back to homepage
  };

  return (
    <div className="book">
      <h3>
        <ArrowBackIosIcon onClick={handleSubmit} />
      </h3>
      <h2>Translations: </h2>

      <div className="books-list">
        {dict?.map((x, index) => (
          <TranslationItem
            key={index}
            defaultValue={x["term"]}
            onChange={(e) => {
              const newDict = [...dict]; // make a copy of the original array
              newDict[index] = { ...x, term: e.target.value }; // update the term property of the clicked element
              setDict(newDict); // update the state with the new array
            }}
          />
        ))}
      </div>
    </div>
  );
};

export default TranslationListPage;
